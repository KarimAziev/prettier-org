* prettier-org

This library provides two minor modes:
- for =org-edit-src-mode= (doesn't require Prettier-js).
- for =src= blocks in ~org-mode~ buffers. It use [[https://prettier.io/docs/en/install.html][Prettier]] for saving code blocks in Org mode's =src= blocks.

[[./prettier-org-demo.gif]]

** Installation

*** with use-package and straight:

#+begin_src elisp
(use-package prettier-org
  :straight (:repo "KarimAziev/prettier-org"
                   :type git
                   :host github)
  :hook ((org-mode . prettier-org-mode)
         (org-src-mode . prettier-org-edit-src-mode)))
#+end_src
*** Manually

Download repository and add it to your load path.

#+begin_src elisp
(require 'prettier-org)
(require 'org)

(add-hook 'org-mode-hook 'prettier-org-mode)
(add-hook 'org-src-mode-hook 'prettier-org-edit-src-mode)
#+end_src

** Usage

**** ~M-x prettier-org-edit-src-mode~ in =org-edit-src-mode= buffers

For =org-edit-src-mode= buffers, use the command ~M-x prettier-org-edit-src-mode~.

Since most formatters cannot run on code with noweb syntax, this mode comments out the noweb syntax, applies the formatter, and then restores the noweb references. Additionally, it will skip any read-only regions.

**** ~M-x prettier-org-mode~ in =org-mode= buffers

Use the command ~M-x prettier-org-mode~ in =org-mode= buffers to run prettier on the current src block on each save.

*** Customization

+ =prettier-org-langs-formatters=

This function will be called with one argument - a string of code and should return formatted string.

All no-web references will be commented before formatting and then restored.

+ =prettier-org-args=
A list of common flags and arguments to be sent to prettier, with the exception of the '--parser' option, which should be specified in the 'prettier-org-src-parsers-alist' variable.

+ =prettier-org-src-parsers-alist=
  An associated list of org src languages and their corresponding Prettier parsers.
